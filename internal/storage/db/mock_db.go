// Code generated by MockGen. DO NOT EDIT.
// Source: db.go

// Package db is a generated GoMock package.
package db

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPsqlStorage is a mock of PsqlStorage interface.
type MockPsqlStorage struct {
	ctrl     *gomock.Controller
	recorder *MockPsqlStorageMockRecorder
}

// MockPsqlStorageMockRecorder is the mock recorder for MockPsqlStorage.
type MockPsqlStorageMockRecorder struct {
	mock *MockPsqlStorage
}

// NewMockPsqlStorage creates a new mock instance.
func NewMockPsqlStorage(ctrl *gomock.Controller) *MockPsqlStorage {
	mock := &MockPsqlStorage{ctrl: ctrl}
	mock.recorder = &MockPsqlStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPsqlStorage) EXPECT() *MockPsqlStorageMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockPsqlStorage) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockPsqlStorageMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockPsqlStorage)(nil).Close))
}

// Ping mocks base method.
func (m *MockPsqlStorage) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockPsqlStorageMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockPsqlStorage)(nil).Ping))
}

// initDB mocks base method.
func (m *MockPsqlStorage) initDB(dataSourceName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "initDB", dataSourceName)
	ret0, _ := ret[0].(error)
	return ret0
}

// initDB indicates an expected call of initDB.
func (mr *MockPsqlStorageMockRecorder) initDB(dataSourceName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "initDB", reflect.TypeOf((*MockPsqlStorage)(nil).initDB), dataSourceName)
}
